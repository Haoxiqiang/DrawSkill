buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.11.+'
    }
}
tasks.withType(Compile) {
    options.encoding = "UTF-8"
}


apply plugin: 'android'

dependencies {
    compile 'com.android.support:appcompat-v7:19.1.0'
    compile 'com.android.support:support-v4:19.1.0'
}


android {
    compileSdkVersion 19
    buildToolsVersion "19.1"

	defaultConfig {
        minSdkVersion 16
        targetSdkVersion 19
    }
    
    lintOptions {
          abortOnError false
    }
    
    	productFlavors {
		qihu {
				packageName='com.h.drawskill'
		}
		baidu{
				packageName='com.h.drawskill'
		}
	}

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            jniLibs.srcDir 'libs'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        hiapk {
      		manifest.srcFile 'hiapk/AndroidManifest.xml'
    		}    	
       	playstore {
       		manifest.srcFile 'hiapk/AndroidManifest.xml'
    		}

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    signingConfigs {
   		signConfig{
     		storeFile file("test.keystore")
    			storePassword "12151010"
    			keyAlias "testkey"
    			keyPassword "12151010"
    		}
	}
    
   buildTypes{
     release {
    		signingConfig  signingConfigs.signConfig
    		runProguard true
     	proguardFile 'proguard.cfg'
     	zipAlign true
     } 
   }
}
